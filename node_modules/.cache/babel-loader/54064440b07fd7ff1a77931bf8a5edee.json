{"ast":null,"code":"var _jsxFileName = \"/Users/zz/cs/quizapp/quizbee/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./assets/style.css\";\nimport QuestionBox from \"./components/QuestionBox\";\nimport quizService from \"./quizService\";\n\nclass QuizBee extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questionBank: [],\n      score: 0\n    };\n\n    this.getQuestions = () => {\n      quizService().then(question => {\n        this.setState({\n          questionBank: question\n        });\n      });\n    };\n\n    this.computeAnswer = (answer, correctAnswer) => {\n      if (answer === computeAnswer) {}\n    };\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, \"QuizBee\"), this.state.questionBank.length > 0 && this.state.questionBank.map(({\n      question,\n      answers,\n      correct,\n      questionID\n    }) => /*#__PURE__*/React.createElement(QuestionBox, {\n      question: question,\n      options: options,\n      key: questionID,\n      selected: answer => this.computeAnswer(answer, correct),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }\n    })));\n  }\n\n}\n\nReactDom.render( /*#__PURE__*/React.createElement(QuizBee, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/zz/cs/quizapp/quizbee/src/index.js"],"names":["React","Component","ReactDom","QuestionBox","quizService","QuizBee","state","questionBank","score","getQuestions","then","question","setState","computeAnswer","answer","correctAnswer","componentDidMount","render","length","map","answers","correct","questionID","options","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,MAAMC,OAAN,SAAsBJ,SAAtB,CAA+B;AAAA;AAAA;AAAA,SAC3BK,KAD2B,GACnB;AACJC,MAAAA,YAAY,EAAE,EADV;AAEJC,MAAAA,KAAK,EAAC;AAFF,KADmB;;AAAA,SAK3BC,YAL2B,GAKZ,MAAM;AACjBL,MAAAA,WAAW,GAAGM,IAAd,CAAmBC,QAAQ,IAAI;AAC/B,aAAKC,QAAL,CAAc;AACVL,UAAAA,YAAY,EAACI;AADH,SAAd;AAGH,OAJG;AAKP,KAX8B;;AAAA,SAc/BE,aAd+B,GAcf,CAACC,MAAD,EAAQC,aAAR,KAA0B;AACtC,UAAID,MAAM,KAAKD,aAAf,EAA6B,CAE5B;AACJ,KAlB8B;AAAA;;AAmB/BG,EAAAA,iBAAiB,GAAG;AAChB,SAAKP,YAAL;AACH;;AAEGQ,EAAAA,MAAM,GAAE;AACJ,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEK,KAAKX,KAAL,CAAWC,YAAX,CAAwBW,MAAxB,GAAiC,CAAjC,IACE,KAAKZ,KAAL,CAAWC,YAAX,CAAwBY,GAAxB,CACI,CAAC;AAACR,MAAAA,QAAD;AAAUS,MAAAA,OAAV;AAAkBC,MAAAA,OAAlB;AAA0BC,MAAAA;AAA1B,KAAD,kBACJ,oBAAC,WAAD;AACA,MAAA,QAAQ,EAAEX,QADV;AAEA,MAAA,OAAO,EAAEY,OAFT;AAGA,MAAA,GAAG,EAAED,UAHL;AAIA,MAAA,QAAQ,EAAER,MAAM,IAAI,KAAKD,aAAL,CAAmBC,MAAnB,EAA0BO,OAA1B,CAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CAHP,CADA;AAeH;;AAvC0B;;AA2C/BnB,QAAQ,CAACe,MAAT,eAAgB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA6BO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA7B","sourcesContent":["import React,{  Component} from \"react\";\nimport ReactDom from \"react-dom\"\nimport \"./assets/style.css\"\nimport QuestionBox from \"./components/QuestionBox\"\nimport quizService from \"./quizService\";\n\n\nclass QuizBee extends Component{\n    state = {\n        questionBank: [],\n        score:0\n    }\n    getQuestions = () => {\n        quizService().then(question => {\n        this.setState({\n            questionBank:question\n        })\n    })\n}\n\n\ncomputeAnswer = (answer,correctAnswer) => {\n    if (answer === computeAnswer){\n\n    }\n}\ncomponentDidMount() {\n    this.getQuestions()\n}\n\n    render(){\n        return(\n        <div className=\"container\">\n            <div className=\"title\">QuizBee</div>\n            {this.state.questionBank.length > 0 &&\n               this.state.questionBank.map(\n                   ({question,answers,correct,questionID}) => \n               <QuestionBox \n               question={question}\n               options={options}\n               key={questionID}\n               selected={answer => this.computeAnswer(answer,correct)}\n               />\n               )}\n        </div>\n        )\n    }\n        \n}\n\nReactDom.render(<QuizBee />, document.getElementById(\"root\"));"]},"metadata":{},"sourceType":"module"}